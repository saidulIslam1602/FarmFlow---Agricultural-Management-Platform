name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20.x'

jobs:
  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit
    
    - name: Lint
      run: npm run lint
    
    - name: Type check
      run: npm run type-check
    
    - name: Run tests
      run: npm test

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Vulnerability scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
    
    - name: Upload results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [quality-checks]
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit
    
    - name: Build
      run: npm run build
      env:
        NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
    
    - name: Analyze bundle
      run: du -sh .next && find .next -name '*.js' -type f -exec du -h {} + | sort -rh | head -20
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ github.sha }}
        path: .next
        retention-days: 7
        compression-level: 6

  deploy-preview:
    name: Preview (Optional)
    needs: [build, security]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    continue-on-error: true
    environment:
      name: preview
      url: ${{ steps.deploy.outputs.preview-url }}
    
    steps:
    - name: Check Vercel secrets
      id: check-secrets
      run: |
        if [ -z "${{ secrets.VERCEL_TOKEN }}" ]; then
          echo "⚠️ Vercel secrets not configured. Skipping deployment."
          echo "secrets_available=false" >> $GITHUB_OUTPUT
          exit 0
        else
          echo "secrets_available=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Checkout
      if: steps.check-secrets.outputs.secrets_available == 'true'
      uses: actions/checkout@v4
    
    - name: Deploy to Vercel
      if: steps.check-secrets.outputs.secrets_available == 'true'
      id: deploy
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
    
    - name: Comment PR
      if: steps.check-secrets.outputs.secrets_available == 'true' && success()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `✅ Preview deployed!\n🔗 URL: ${{ steps.deploy.outputs.preview-url }}`
          })

  deploy-production:
    name: Production (Optional)
    needs: [build, security]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    continue-on-error: true
    environment:
      name: production
      url: https://farmflow.vercel.app
    
    steps:
    - name: Check Vercel secrets
      id: check-secrets
      run: |
        if [ -z "${{ secrets.VERCEL_TOKEN }}" ]; then
          echo "⚠️ Vercel secrets not configured. Skipping deployment."
          echo "secrets_available=false" >> $GITHUB_OUTPUT
          exit 0
        else
          echo "secrets_available=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Checkout
      if: steps.check-secrets.outputs.secrets_available == 'true'
      uses: actions/checkout@v4
    
    - name: Deploy to Vercel
      if: steps.check-secrets.outputs.secrets_available == 'true'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'